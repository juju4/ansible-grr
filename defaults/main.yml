---

grr_r: 3.1.0-2
## only xenial supported
grr_debarchive_url: "https://storage.googleapis.com/releases.grr-response.com/3.1.0.2/grr-server_{{ grr_r }}_amd64.deb"
grr_debarchive_hash: "c7162ba450637b875dffb4c5342fa23ab55b44af7d4c57a381dea87fc9a7a325"
grr_hostname: "{{ ansible_fqdn }}"
grr_domain: localhost
grr_admin_port: 8080
grr_frontend_port: 8000
grr_alert_email: "grr-monitoring@{{ grr_domain }}"
grr_alert_emergency: "grr-emergency@{{ grr_domain }}"
grr_admin_pass: adminpass
## By default, if ubuntu/debian, use provided package else with source
grr_source_build: false

grr_datastore: SqliteDataStore
#grr_datastore: MysqlAdvanced
grr_datastore_mysql_host: localhost
## 0 meaning socket
grr_datastore_mysql_port: 0
grr_datastore_mysql_db: grrdb
grr_datastore_mysql_user: grr
grr_datastore_mysql_pass: grr

## do you want server to be covered?
## Note: can only be done if initialize is fully runned before as else client are not generated
grr_deploy_on_server: false

## if building from pip (centos), virtualenv
#grr_env: /root/env-grr
grr_env: /usr/local/share/env-grr
