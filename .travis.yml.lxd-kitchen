---
dist: xenial
sudo: required
rvm:
  - 2.6

env:
#  - distribution: centos
#    version: 8
#    suite: default
  - distribution: centos
    version: 7
    suite: default
  - distribution: ubuntu
    version: 18.04
    suite: default
  - distribution: ubuntu
    version: 16.04
    suite: default
#  - distribution: ubuntu
#    version: 18.04
#    suite: default-HEAD
#  - distribution: centos
#    version: 7
#    suite: default-HEAD

before_install:
  - env
  - pwd
  - find -ls
  - "[ -f get-dependencies.sh ] && sh -x get-dependencies.sh"
  - echo "deb http://archive.ubuntu.com/ubuntu xenial-backports main restricted universe multiverse" | sudo tee /etc/apt/sources.list.d/xenial-backports.list
  - sudo apt-get update -qq
  - sudo apt -t xenial-backports -y install lxd acl dnsmasq-base zfsutils-linux -q
## change of group implies logout+login to apply... can't do with travis = run as root (sic)
## https://github.com/travis-ci/travis-ci/issues/1839   or chain: sudo -E su $USER -c "..."
  - sudo usermod -G lxd travis
  # Pull container
#  - lxc remote add images images.linuxcontainers.org
  - sudo -E su $USER -c "lxc remote list"
  - sudo -E su $USER -c "lxc image list"
## pre-download base images
  - 'sudo -E su $USER -c "[ ${distribution} == ubuntu ] || lxc image copy images:${distribution}/${version}/amd64 local: --alias=${distribution}-${version}-nossh"'
  - 'sudo -E su $USER -c "[ ${distribution} == ubuntu ] && lxc image copy ubuntu:${version} local: --alias=${distribution}-${version}" || true'
## configure network
  - ifconfig -a
  - sudo lxc info
  - sudo lxc network list
  - sudo lxc network create lxdbr0
  - sudo lxc network show lxdbr0
  - sudo lxc network attach-profile lxdbr0 default ens4
  - sudo lxc profile device get default ens4 nictype || true
  - sudo service lxd restart
  - ps ax | grep dnsmasq
  - systemctl status -l --no-pager lxd || true
  - cat /etc/network/interfaces.d/50-cloud-init.cfg
  - sudo lxc network list
# configure storage pool
  - sudo lxc storage list
  - sudo lxc storage create pool1 zfs
  - sudo lxc storage list
  - sudo zpool list
  - sudo lxc profile device add default root disk path=/ pool=pool1
  - sudo lxc profile show default
# https://redis4you.com/articles.php?id=012&name=redis
# https://vincent.bernat.ch/en/blog/2014-tcp-time-wait-state-linux
  - sudo sysctl -w net.ipv4.tcp_timestamps=1

  - sudo pip install ansible ansible-lint
  - gem install test-kitchen --version "=1.25.0"
  - gem install kitchen-ansible
  - gem install kitchen-sync
  - gem install kitchen-lxd_cli
  - gem list
  - which kitchen
## ssh key for lxd_cli ?
  - ls ~/.ssh
  - ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa -P ""
## sudo/su get us a non-usual PATH ...
  - '[ "X${distribution}" == "Xcentos" ] && sudo -E su $USER -c "sh -x ./test/lxd/centos-ssh-image.sh ${version}" || true'
  - sudo -E su $USER -c "env"
  - sudo -E su $USER -c "env PATH=$PATH kitchen diagnose --all"
#  - sudo -E su $USER -c "kitchen diagnose --all"
#  - sudo -E -u $USER kitchen diagnose --all

script:
  - ansible-lint tasks/main.yml || true
#  - KITCHEN_LOCAL_YAML=.kitchen.local.yml bundle exec kitchen verify ${INSTANCE}
  - sudo -E su $USER -c "env PATH=$PATH kitchen verify ${suite}-${distribution}-${version//./} -l debug || (cat $HOME/.kitchen/logs/${suite}-${distribution}-${version//./}.log; find /tmp/kitchen)"

after_script:
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'cat /tmp/idempotency.test'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'env'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'pip freeze'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c '/usr/bin/grr_server --version'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c '/usr/bin/grr_server --helpfull'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'cat /etc/grr/server.local.yaml'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'cat /etc/grr/server.local2.yaml'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c '/usr/local/share/env-grr/bin/pip freeze'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'env PATH="/usr/local/share/env-grr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin" /usr/local/share/env-grr/bin/npm root -g'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'env PATH="/usr/local/share/env-grr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin" /usr/local/share/env-grr/bin/npm list -g --depth=1'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'env PATH="/usr/local/share/env-grr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin" /usr/local/share/env-grr/bin/npm outdated'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c '/usr/local/share/env-grr/bin/grr_server --version'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c '/usr/local/share/env-grr/bin/grr_server --helpfull'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'cat /usr/local/share/env-grr/install_data/etc/server.local.yaml'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'cat /usr/local/share/env-grr/install_data/etc/server2.local.yaml'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'find /usr/local/share/env-grr/ -type f'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'ls /lib/modules/ /usr/src/kernels/'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c '/usr/bin/chipsec_main -v'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c '/usr/local/share/env-grr/bin/chipsec_main'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'mysql_config'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'mariadb_config'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'mysql -u root -e \"show databases;\"'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'find /etc/mysql /root/.my* -type f -ls'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'find /usr/bin -iname \"python*\"'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'python3 -m venv /tmp/test-venv'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'python3.6 -m venv /tmp/test-venv'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'curl -vsS http://127.0.0.1:8000/control'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'curl -vsS http://127.0.0.1:8000'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'curl -vsS http://127.0.0.1:8080'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'ps auxw'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'netstat -anp'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'ss -nlp'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'systemctl -l --no-pager status'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen exec ${suite}-${distribution}-${version//./} -c 'journalctl -xe --no-pager'"
  - sudo -E su $USER -c "env PATH=$PATH kitchen destroy ${suite}-${distribution}-${version//./} -l debug || (cat $HOME/.kitchen/logs/${suite}-${distribution}-${version//./}.log; find /tmp/kitchen)"

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
