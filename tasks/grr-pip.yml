---
# https://grr-doc.readthedocs.io/en/latest/installing-grr-server/from-released-pip.html

- name: Set facts
  set_fact:
    grr_bindir: "{{ grr_env }}/bin"
    grr_etc: "{{ grr_env }}/install_data/etc"
    grr_executables: "{{ grr_env }}/executables"

- name: pip install | set grr virtualenv with latest pip and setuptools
  pip:
    name: "{{ item.n }}"
    version: "{{ item.v }}"
    virtualenv: "{{ grr_env }}"
    virtualenv_python: "{{ grr_python_bin | default('python') }}"
  with_items:
    - { n: pip, v: 19.3.1 }
    - { n: setuptools, v: 41.2.0 }
  register: pkg_result
  until: pkg_result is success

- debug:
    var: grr_pip_name
    verbosity: 1

- include: chipsec.yml

- name: pip install | set grr virtualenv
  pip:
    name: "{{ grr_pip_name }}"
    virtualenv: "{{ grr_env }}"
    virtualenv_python: "{{ grr_python_bin | default('python') }}"
  register: pkg_result
  until: pkg_result is success
  environment:
    KERNEL_SRC_DIR: "{{ kernel_src_dir | default(_kernel_src_dir) }}"

- name: pip install | build grr-response-templates
  command: >
    {{ grr_bindir }}/grr_client_build build --output mytemplates
  args:
    creates: "{{ grr_env }}/mytemplates"
    chdir: "{{ grr_env }}"

- name: pip install | repack grr-response-templates
  command: >
    {{ grr_bindir }}/grr_client_build repack --template {{ grr_env }}/mytemplates/*.zip --output_dir mytemplates
  args:
#    creates: "{{ grr_env }}/mytemplates"
    chdir: "{{ grr_env }}"
  ignore_errors: true

## no upstart script for ubuntu trusty
- block:
    - name: systemd | add systemd scripts
      get_url: "url={{ item.u }} dest={{ systemd_lib }}/{{ item.d }} mode=0644 checksum={{ item.c }}"
      with_items:
        - { u: 'https://raw.githubusercontent.com/google/grr/master/debian/grr-server.service',
            d: 'grr.server.service',
            c: 'sha256:c0f80f95cd8e266c76662c64791c8e85b56755658e24bf9e5a5d1e075fb1e740'
          }
        - { u: 'https://raw.githubusercontent.com/google/grr/master/debian/grr-server%40.service',
            d: 'grr-server@.service',
            c: 'sha256:63f0d636fdffa452a97caef8e14e151a0c1bfa109e6da1385c335c64b9bee87f'
          }
      notify:
        - systemd reload
    - name: systemd | update path
      replace:
        dest: "{{ systemd_lib }}/grr-server@.service"
        regexp: /usr/bin/grr_
        replace: "{{ grr_bindir }}/grr_"
        backup: yes
      notify:
        - systemd reload
  when: >
    (ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7) or
    (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 16)
