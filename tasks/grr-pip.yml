---

- name: Set facts
  set_fact:
    grr_bindir: "{{ grr_env }}/bin"
    grr_etc: "{{ grr_env }}/install_data/etc"
    grr_executables: "{{ grr_env }}/executables"

- name: pip install | set grr virtualenv with latest pip and setuptools
  pip:
    name: "{{ item.n }}"
    version: "{{ item.v }}"
    virtualenv: "{{ grr_env }}"
    virtualenv_python: "{{ grr_python_bin | default('python') }}"
  with_items:
    - { n: pip, v: 19.2.3 }
    - { n: setuptools, v: 41.2.0 }
  register: pkg_result
  until: pkg_result is success

- debug:
    var: grr_pip_name
    verbosity: 1

- name: pip install | set grr virtualenv
  pip:
    name: "{{ grr_pip_name }}"
    virtualenv: "{{ grr_env }}"
    virtualenv_python: "{{ grr_python_bin | default('python') }}"
  register: pkg_result
  until: pkg_result is success
  environment:
    KERNEL_SRC_DIR: "{{ kernel_src_dir | default(_kernel_src_dir) }}"

- name: pip install | install grr-response-templates
  command: >
    {{ grr_bindir }}/pip install --no-cache-dir
        -f https://storage.googleapis.com/releases.grr-response.com/index.html
        grr-response-templates
  args:
    creates: "{{ grr_env }}/grr-response-templates"

## no upstart script for ubuntu trusty
- block:
    - name: systemd | add systemd scripts
      get_url: "url={{ item.u }} dest=/usr/lib/systemd/system/{{ item.d }} mode=0644 checksum={{ item.c }}"
      with_items:
        - { u: 'https://raw.githubusercontent.com/google/grr/f94d9ca8481efe0030b42dbfe6e1230a0af4d038/debian/grr-server.service',
            d: 'grr.server.service',
            c: 'sha256:9cbfcdba412c335c1178743de3915161a5424566e5a94f7d0bf1e7b1388310d1'
          }
        - { u: 'https://raw.githubusercontent.com/google/grr/f94d9ca8481efe0030b42dbfe6e1230a0af4d038/debian/grr-server%40.service',
            d: 'grr-server@.service',
            c: 'sha256:da1bbebbcfa874b855b29976d23ce62cf11ffc9e115ac510af48213d55d9b796'
          }
      notify:
        - systemd reload
    - name: systemd | update path
      replace:
        dest: /lib/systemd/system/grr-server@.service
        regexp: /usr/bin/grr_
        replace: "{{ grr_bindir }}/grr_"
        backup: yes
      notify:
        - systemd reload
  when: (ansible_os_family == "RedHat") and ansible_distribution_version.split('.')[0] == '7'
