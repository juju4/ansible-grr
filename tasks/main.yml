---

- name: Include version-specific variables for Ubuntu.
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
  when: ansible_distribution == 'Ubuntu'
- name: Include version-specific variables for RedHat
  include_vars: "RedHat-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_os_family == "RedHat" or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- include: debian.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- include: redhat.yml
  when: ansible_os_family == "RedHat" or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- include: datastore-mysql.yml
  when: grr_datastore is defined and grr_datastore == 'MysqlAdvanced' and grr_datastore_mysql_host == 'localhost'

- name: Review some limits for SQLite datastore
  sysctl: name="fs.file-max" value=1048576 sysctl_set=yes state=present reload=yes
  when: not (ansible_virtualization_type is defined and (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker"))
##  End grr/scripts/install_script_ubuntu.sh: BUILD_DEPS_ONLY

## Note: without pip 8.1.2, rekall install got: 'AttributeError: 'Requirement' object has no attribute 'project_name''
- name: set latest pip for rekall
  pip: name={{ item.n }} version={{ item.v }} virtualenv=/root/env-grr
#  pip: name={{ item.n }} version={{ item.v }}
  with_items:
    - { n: pip, v: 8.1.2 }
- name: Install Rekall
  pip: name={{item}} state=present virtualenv=/root/env-grr
#  pip: name={{item}} state=present
  with_items:
    - rekall

### from docker script but is it relevant here
#- name: Compile protos
#  command: make chdir=/usr/share/grr/proto
#- name: Remove old grr installed by the deb package and overwrite it with repository one
#  command: "{{ item }} chdir=/usr/share/grr"
#  with_items:
#    - rm -rf /usr/lib/python2.7/dist-packages/grr
#    - python setup.py build
#    - python setup.py install

- include: grr-configure.yml

