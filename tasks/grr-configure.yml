---

- name: Ensure grr config dir exists
  file:
    dest: "{{ grr_etc }}"
    state: directory
    mode: '0755'

- name: Check if existing server.local.yaml
  stat: path="{{ grr_etc }}/server.local.yaml"
  register: cfg0
- name: grr local configuration file update
  template:
    src: server.local.yaml.j2
    dest: "{{ grr_etc }}/server2.local.yaml"
    backup: yes
    owner: 0
    group: 0
    mode: '0600'
#    validate='/path/cmd validate config'
  notify:
    - restart grr-server - systemd
#    - restart grr
  register: cfg
  when: not cfg0.stat.exists

- name: Ensure /var/grr-datastore directory exists
  file: dest=/var/grr-datastore state=directory mode=0700

## FIXME! centos7: 'pkg_resources.DistributionNotFound: The 'ipython==4.1.1' distribution was not found and
##      is required by grr-response-core' but is installed
#- path: dest=/etc/grr/server.local.yaml
- name: Generate keys
  command: "{{ grr_bindir }}/grr_config_updater generate_keys --overwrite"
  ignore_errors: true
  when: cfg is defined and cfg.changed

- name: Add extra config to main file generated with keys
  blockinfile:
    dest: "{{ grr_etc }}/server.local.yaml"
    block: |
      Config.includes:
        - server2.local.yaml
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    create: true

### Interactive, config / still interactive
#- name: Initialize the configuration, building clients and setting options.
##  command: grr_config_updater initialize
##  command: grr_config_updater --config /etc/grr/server.local.yaml initialize
#  command: "grr_config_updater initialize --noprompt --external_hostname {{ grr_hostname }} --admin_password {{ grr_admin_pass }}"
### FIXME! AttributeError: 'Namespace' object has no attribute 'overwrite'

#- file: dest=/home/vagrant/.python-eggs mode=0755 state=directory

#- include: debian-agent.yml
#  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- debug:
    msg: >
      Run '{{ grr_bindir }}/grr_config_updater initialize' to complete install and
       point your browser at http://${HOSTNAME}:8000
